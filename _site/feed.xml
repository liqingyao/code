<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Li Qingyao</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://code.liqingyao.com/</link>
    <atom:link href="http://code.liqingyao.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 13 Nov 2015 14:08:09 -0800</pubDate>
    <lastBuildDate>Fri, 13 Nov 2015 14:08:09 -0800</lastBuildDate>
    <generator>Jekyll v3.0.0</generator>
    
      <item>
        <title>Windows下安装与使用GCC编译器</title>
        <description>&lt;h3 id=&quot;gcc&quot;&gt;&lt;strong&gt;什么是GCC?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;我们在Windows系统下习惯使用诸如Windows Visual Stdio图形化IDE工具来编辑和编译代码，但在Unix/Linux系统下如何编译C++代码呢？答案是GCC(GUN Compiler Collection)。GCC源于一场自由软件计划，最初只能在不同操作系统上处理C语言，经过快速扩张后目前也支持C++/Objective-C/Java/Ada/Pascal/Fortran等多种语言的编译。&lt;/p&gt;

&lt;h3 id=&quot;gcc-1&quot;&gt;&lt;strong&gt;安装GCC&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;下载安装MinGW
MinGW(Minimalist GNU on Windows)是Windows系统下GNU工具套装，使用MinGW来安装GCC。
&lt;a href=&quot;http://sourceforge.net/projects/mingw/files/&quot;&gt;点击下载&lt;/a&gt;，并安装到C盘根目录。&lt;/li&gt;
  &lt;li&gt;配置Windows环境变量
找到环境变量：控制面板-&amp;gt;系统-&amp;gt;高级系统设置-&amp;gt;高级-&amp;gt;环境变量；
在系统变量中选择&lt;code&gt;Path&lt;/code&gt;，并在变量值中添加&lt;code&gt;C:\MinGW\bin&lt;/code&gt;
在系统变量中新建&lt;code&gt;LIBRARY_PATH&lt;/code&gt;，变量值是&lt;code&gt;C:\MinGW\lib&lt;/code&gt;
在系统变量中新建&lt;code&gt;C_INCLUDE_PATH&lt;/code&gt;，变量值是&lt;code&gt;C:\MinGW\include&lt;/code&gt;
以上操作分别配置了标准库和头文件的存放路径。&lt;/li&gt;
  &lt;li&gt;使用MinGW安装GCC
运行MinGW,在Basic Setup中选择mingw32-gcc-g++
选择Installation-&amp;gt;Apply Changes
等待GCC相关环境安装完毕。&lt;/li&gt;
  &lt;li&gt;以上步骤完成后，在cmd敲入命令
&lt;code&gt;gcc --version&lt;/code&gt;
如果安装成功，会显示gcc版本号。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;gcc-2&quot;&gt;&lt;strong&gt;使用GCC&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;创建GCC工作目录
&lt;code&gt;mkdir CPP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;前往工作目录
&lt;code&gt;cd CPP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;选择一种文本编辑器（比如Windows自带的notepad）
&lt;code&gt;notepad main.c&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;在自动弹出的文本编辑器中敲测试代码，保存&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;stdlib.h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;!-- &lt;pre class=&quot;theme:github width-set:true width:450 lang:default decode:true &quot; &gt;include &amp;lt;stdio.h&amp;gt;
include &amp;lt;stdlib.h&amp;gt;
int main() {
    printf(&quot;Hello World\n&quot;);
    return(0);
}&lt;/pre&gt; --&gt;

&lt;ol&gt;
  &lt;li&gt;使用GCC编译main.c，输出HelloWorld可执行文件
&lt;code&gt;gcc main.c -o HelloWorld&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;此时会报错“缺少libgcc_s_sjlj-1.dll文件”
&lt;a href=&quot;http://www.dll-files.com/dllindex/dll-files.shtml?libgcc_s_sjlj-1&quot;&gt;点击下载&lt;/a&gt;32-bit版本，解压并放到C:\Windows\SysWOW64中&lt;/li&gt;
  &lt;li&gt;重复步骤5，正常运行，此时可以看到工作目录下生成了HelloWorld.exe文件。最后在cmd中运行文件
&lt;code&gt;HelloWorld.exe&lt;/code&gt;
终于看到第一个测试输出“HelloWorld”，大功告成！&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[参考资料]&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;http://www.wikihow.com/Compile-a-C-Program-Using-the-GNU-Compiler-(GCC)&lt;/li&gt;
	&lt;li&gt;http://blog.csdn.net/firefoxbug/article/details/6724876&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 22 Apr 2015 03:21:32 -0700</pubDate>
        <link>http://code.liqingyao.com/%E5%85%B6%E4%BB%96/2015/04/22/windows-install-gcc.html</link>
        <guid isPermaLink="true">http://code.liqingyao.com/%E5%85%B6%E4%BB%96/2015/04/22/windows-install-gcc.html</guid>
        
        
        <category>其他</category>
        
      </item>
    
      <item>
        <title>如何成为更好的 iOS 开发者</title>
        <description>&lt;p&gt;在 Boss 的敦促和项目进度的高压下猛学了两个多月 iOS 开发，从 Objective-C 小白到上线第一个应用，再到反思技术改进应用。从始至终都是自学，回头看看确实走了不少弯路。在这做些小总结，也希望能给读者带来些许帮助。&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;零基础自学方法论：先概览后细节，先容易后复杂。参考资料和步骤如下：&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;&lt;a href=&quot;http://rypress.com/tutorials/objective-c/index.html&quot;&gt;Ry’s Objective-C Tutorial&lt;/a&gt; （图形化教学，深入浅出）&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://v.163.com/special/opencourse/iphonekaifa.html&quot;&gt;iPhone 开发公开课：CS193P&lt;/a&gt; （高富帅轮番上阵，不学也难）&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.raywenderlich.com/&quot;&gt;Ray Wenderlich Tutorial&lt;/a&gt; 或者 &lt;a href=&quot;http://www.techotopia.com/index.php/Image:Ios_7_app_development_essentials.png&quot;&gt;Techotopia Tutorial&lt;/a&gt;  或者 &lt;a href=&quot;http://www.appcoda.com/tutorials/&quot;&gt;AppCoda Tutorial&lt;/a&gt;（入门基础控件/TableView/ViewController 等用法的好教程，丰富的示例，三者可以结合使用）&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/navigation/&quot;&gt;iOS Developer Library&lt;/a&gt;（万能的百科全书，初学者最好有以上基础后再参考）&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/&quot;&gt;StackOverflow&lt;/a&gt;（高质量论坛，或者直接 google 搜索关键词：[problem] + ios / [problem] + iPhone SDK 找 StackOverflow 的链接）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我就是按照以上思路来自学的。接下来需要掌握以下：&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.raywenderlich.com/46988/ios-design-patterns&quot;&gt;iOS Design Pattern&lt;/a&gt;（Cocoa 核心架构：MVC）&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.codefellows.org/blog/everything-a-competent-ios-developer-needs-to-know&quot;&gt;Everything a Competent iOS Developer Needs to Know&lt;/a&gt;（iOS 开发树形结构）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一条是 iOS App 架构指南针，深入理解 Design Pattern 是写出结构清晰、维护方便、可重用性高的代码的核心，也是每一个 iOS 开发者必须知道的事。&lt;/p&gt;

&lt;p&gt;第二条的 iOS 树形图囊括了一个高素质 iOS 开发者需要必备的知识储备。&lt;/p&gt;

&lt;p&gt;当你对以上都了然于心，也有了一些实战经验后，比如开发过一两个完整的 App，是不是觉得代码的堆砌造成很难维护和修改，想学更多又不知从何下手。我现在也正经历这个阶段。我找了一些方法，与君共勉。&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;阅读大量高质量开源代码（from Github），也让他人来阅读你的代码&lt;/li&gt;
	&lt;li&gt;宁愿多花时间来思考架构和模块的规划，也不要立刻埋头码字&lt;/li&gt;
	&lt;li&gt;为代码写注释，组织好代码结构&lt;/li&gt;
	&lt;li&gt;不断的练习（Do you know the rule of 10,000? It says that if you want to be world-class in any field you have to invest 10,000 hours in total.）&lt;/li&gt;
	&lt;li&gt;阅读 iOS 牛人博客，关注苹果发布会等新动态，同时关心一切互联网、科技新闻，保持一颗年轻的心。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[参考资料]&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;http://www.wikihow.com/Improve-your-Skills-as-a-Programmer&lt;/li&gt;
	&lt;li&gt;http://www.appdesignvault.com/betterdeveloper/&lt;/li&gt;
	&lt;li&gt;http://www.cocoanetics.com/2010/07/how-to-become-great-at-ios-development/&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 13 Nov 2014 10:56:32 -0800</pubDate>
        <link>http://code.liqingyao.com/ios/2014/11/13/how-to-become-better-ios-developer.html</link>
        <guid isPermaLink="true">http://code.liqingyao.com/ios/2014/11/13/how-to-become-better-ios-developer.html</guid>
        
        
        <category>iOS</category>
        
      </item>
    
  </channel>
</rss>
